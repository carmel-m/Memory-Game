{"version":3,"sources":["components/Counter/index.js","components/Header/index.js","components/Instructions/index.js","components/Wrapper/index.js","components/AnimalCard/index.js","components/Game/index.js","App.js","index.js"],"names":["Counter","props","className","count","Header","Instructions","Wrapper","children","AnimalCard","alt","name","src","image","id","onClick","whenClicked","App","state","animals","counter","clicked","event","click","forEach","target","alert","window","location","reload","push","randomize","setState","console","log","random","arrayShuffle","this","map","animal","key","Component","Game","ReactDOM","render","document","getElementById"],"mappings":"+9BAWeA,MATf,SAAiBC,GAEb,OACI,yBAAKC,UAAU,aAAf,kBACoBD,EAAME,QCUnBC,MAbf,SAAgBH,GACd,OACE,yBAAKC,UAAU,aACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,YAAf,eACA,yBAAKA,UAAU,YAAW,kBAAC,EAAD,CAC1BC,MAAOF,EAAME,YCQNE,MAff,WAII,OACQ,yBAAKH,UAAU,oBACrB,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aAAf,4PCCKI,MARf,SAAiBL,GACf,OACE,yBAAKC,UAAU,aACX,yBAAKA,UAAU,OAAOD,EAAMM,Y,MCMrBC,MARf,SAAoBP,GAClB,OACE,yBAAKC,UAAU,gBACX,yBAAKA,UAAU,qBAAqBO,IAAKR,EAAMS,KAAMC,IAAKV,EAAMW,MAAOC,GAAIZ,EAAMY,GAAIC,QAASb,EAAMc,gB,uBC2E7FC,E,2MAxEbC,MAAQ,CACNC,UACAC,QAAS,EACTC,QAAS,I,EAKXL,YAAc,SAAAM,GACZ,IAAIF,EAAU,EAAKF,MAAME,QACrBG,EAAQ,EAAKL,MAAMG,QAEvBE,EAAMC,SAAQ,SAAAV,GACRA,IAAOQ,EAAMG,OAAOX,KACtBY,MAAM,aACNC,OAAOC,SAASC,aAIpBN,EAAMO,KAAKR,EAAMG,OAAOX,IAER,MADhBM,GAAW,KAETM,MAAM,WACNC,OAAOC,SAASC,UAGlB,EAAKE,YAEL,EAAKC,SAAS,CAAEZ,UAASC,QAASE,IAElCU,QAAQC,IAAIZ,EAAMG,OAAOX,K,EAG3BiB,UAAY,WACV,IAAII,EAASC,IAAa,EAAKlB,MAAMC,SACrC,EAAKa,SAAS,CAAEb,QAASgB,K,wEAGjB,IAAD,OACP,OACE,yBAAKhC,UAAU,oBACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,oBACb,kBAAC,EAAD,CAAQC,MAAOiC,KAAKnB,MAAME,UAC1B,yBAAKjB,UAAU,cACb,yBAAKA,UAAU,oBACb,kBAAC,EAAD,UAMR,yBAAKA,UAAU,oBACb,kBAAC,EAAD,KACE,yBAAKA,UAAU,cACZkC,KAAKnB,MAAMC,QAAQmB,KAAI,SAAAC,GAAM,OAC5B,kBAAC,EAAD,CACEzB,GAAIyB,EAAOzB,GACX0B,IAAKD,EAAOzB,GACZH,KAAM4B,EAAO5B,KACbE,MAAO0B,EAAO1B,MACdG,YAAa,EAAKA,yB,GA9DlByB,aCAHxB,MAJf,WACE,OAAO,kBAACyB,EAAD,OCATC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.b790ecef.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Counter(props) {\n\n    return (\n        <div className=\"container\">\n            Current Score: {props.count}\n        </div>\n    )\n}\n\nexport default Counter;\n","import React from \"react\";\nimport Counter from \"../Counter\";\n\nfunction Header(props) {\n  return (\n    <div className=\"container\">\n      <div className=\"row border\">\n        <div className=\"col-sm-9\">Memory Game</div>\n        <div className=\"col-sm-3\"><Counter \n        count={props.count}\n        /></div>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Instructions() {\n\n\n  \n    return (\n            <div className=\"container border\">\n      <div className=\"row\">\n          <div className=\"col-sm-10\">\n            Click on any animal to begin! The cards will randomly reshuffle after each click, and the game is won when all 12 animals have been clicked once.  If you click on an animal more than once, your score will be reset to 0 and the game will restart.\n            </div>\n        </div>\n        </div>\n    )\n}\n\nexport default Instructions;","import React from \"react\";\n\nfunction Wrapper(props) {\n  return (\n    <div className=\"container\">\n        <div className=\"row\">{props.children}</div>\n    </div>\n  );\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction AnimalCard(props) {\n  return (\n    <div className=\"col-3 square\">\n        <img className=\"card-img img-fluid\" alt={props.name} src={props.image} id={props.id} onClick={props.whenClicked}/>\n      </div>\n  );\n}\n\nexport default AnimalCard;\n\n\n","import React, { Component } from \"react\";\nimport Header from \"../Header\";\nimport Instructions from \"../Instructions\";\nimport Wrapper from \"../Wrapper\";\nimport AnimalCard from \"../AnimalCard\";\nimport animals from \"../../components/AnimalData/animals.json\";\nimport arrayShuffle from \"array-shuffle\";\n\nclass App extends Component {\n  state = {\n    animals,\n    counter: 0,\n    clicked: []\n  };\n\n  // ========== LOGIC ==========\n\n  whenClicked = event => {\n    let counter = this.state.counter;\n    let click = this.state.clicked;\n\n    click.forEach(id => {\n      if (id === event.target.id) {\n        alert(\"Game over\");\n        window.location.reload();\n      }\n    });\n\n    click.push(event.target.id);\n    counter += 1;\n    if (counter === 12) {\n      alert(\"You won\");\n      window.location.reload();\n    }\n\n    this.randomize();\n\n    this.setState({ counter, clicked: click });\n\n    console.log(event.target.id);\n  };\n\n  randomize = () => {\n    let random = arrayShuffle(this.state.animals);\n    this.setState({ animals: random });\n  };\n\n  render() {\n    return (\n      <div className=\"container border\">\n        <div className=\"row border\">\n          <div className=\"col-sm-12 border\">\n            <Header count={this.state.counter} />\n            <div className=\"row border\">\n              <div className=\"col-sm-12 border\">\n                <Instructions />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"container border\">\n          <Wrapper>\n            <div className=\"row border\">\n              {this.state.animals.map(animal => (\n                <AnimalCard\n                  id={animal.id}\n                  key={animal.id}\n                  name={animal.name}\n                  image={animal.image}\n                  whenClicked={this.whenClicked}\n                />\n              ))}\n            </div>\n          </Wrapper>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","import React from \"react\";\nimport \"./App.css\";\nimport Game from \"./components/Game\";\n\nfunction App() {\n  return <Game />\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}